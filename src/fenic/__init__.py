"""Fenic is an opinionated, PySpark-inspired DataFrame framework for building production AI and agentic applications."""

from fenic.api import (
    AnthropicLanguageModel,
    Catalog,
    CloudConfig,
    CohereEmbeddingModel,
    Column,
    ColumnOrName,
    DataFrame,
    DataFrameReader,
    DataFrameWriter,
    GoogleDeveloperEmbeddingModel,
    GoogleDeveloperLanguageModel,
    GoogleVertexEmbeddingModel,
    GoogleVertexLanguageModel,
    GroupedData,
    Lineage,
    OpenAIEmbeddingModel,
    OpenAILanguageModel,
    OpenRouterLanguageModel,
    SemanticConfig,
    SemanticExtensions,
    Session,
    SessionConfig,
    array,
    array_agg,
    array_contains,
    array_size,
    asc,
    asc_nulls_first,
    asc_nulls_last,
    async_udf,
    avg,
    coalesce,
    col,
    collect_list,
    count,
    create_mcp_server,
    desc,
    desc_nulls_first,
    desc_nulls_last,
    embedding,
    empty,
    first,
    greatest,
    json,
    least,
    lit,
    markdown,
    max,
    mean,
    min,
    null,
    run_mcp_server_asgi,
    run_mcp_server_async,
    run_mcp_server_sync,
    semantic,
    stddev,
    struct,
    sum,
    text,
    tool_param,
    udf,
    when,
)
from fenic.core import (
    ArrayType,
    BooleanType,
    BoundToolParam,
    ClassDefinition,
    ClassifyExample,
    ClassifyExampleCollection,
    ColumnField,
    DataCollection,
    DataLike,
    DataLikeType,
    DatasetMetadata,
    DataType,
    DocumentPathType,
    DoubleType,
    EmbeddingType,
    FloatType,
    FuzzySimilarityMethod,
    HtmlType,
    IntegerType,
    JoinExample,
    JoinExampleCollection,
    JsonType,
    KeyPoints,
    LMMetrics,
    MapExample,
    MapExampleCollection,
    MarkdownType,
    ModelQuantization,
    OperatorMetrics,
    Paragraph,
    ParameterizedToolDefinition,
    PredicateExample,
    PredicateExampleCollection,
    ProviderSort,
    QueryMetrics,
    QueryResult,
    RMMetrics,
    Schema,
    SemanticSimilarityMetric,
    StringType,
    StructField,
    StructType,
    StructuredOutputStrategy,
    ToolParam,
    TranscriptType,
)
from fenic.core.error import InvalidExampleCollectionError
from fenic.core.types.semantic import ModelAlias
from fenic.logging import configure_logging

__all__ = [
    # Session
    "Session",
    "SessionConfig",
    "CloudConfig",
    "OpenAIEmbeddingModel",
    "OpenAILanguageModel",
    "AnthropicLanguageModel",
    "CohereEmbeddingModel",
    "GoogleDeveloperLanguageModel",
    "GoogleDeveloperEmbeddingModel",
    "GoogleVertexLanguageModel",
    "GoogleVertexEmbeddingModel",
    "OpenRouterLanguageModel",
    "SemanticConfig",
    "ModelAlias",
    # IO
    "DataFrameReader",
    "DataFrameWriter",
    # DataFrame
    "DataFrame",
    "GroupedData",
    "SemanticExtensions",
    # Column
    "Column",
    "ColumnOrName",
    # Catalog
    "Catalog",
    "DatasetMetadata",
    # Types
    "ArrayType",
    "BooleanType",
    "ColumnField",
    "DataType",
    "DocumentPathType",
    "DoubleType",
    "EmbeddingType",
    "FloatType",
    "HtmlType",
    "IntegerType",
    "JsonType",
    "KeyPoints",
    "MapExample",
    "MapExampleCollection",
    "MarkdownType",
    "PredicateExample",
    "PredicateExampleCollection",
    "Schema",
    "ClassDefinition",
    "ClassifyExample",
    "ClassifyExampleCollection",
    "JoinExample",
    "JoinExampleCollection",
    "Paragraph",
    "Schema",
    "SemanticSimilarityMetric",
    "StringType",
    "StructField",
    "StructType",
    "TranscriptType",
    "FuzzySimilarityMethod",
    "ProviderSort",
    "DataCollection",
    "ModelQuantization",
    "StructuredOutputStrategy",
    # Functions
    "semantic",
    "text",
    "json",
    "markdown",
    "embedding",
    "array",
    "array_agg",
    "array_contains",
    "array_size",
    "asc",
    "asc_nulls_first",
    "asc_nulls_last",
    "async_udf",
    "avg",
    "coalesce",
    "collect_list",
    "count",
    "desc",
    "desc_nulls_first",
    "desc_nulls_last",
    "first",
    "max",
    "mean",
    "min",
    "struct",
    "sum",
    "stddev",
    "udf",
    "when",
    "col",
    "lit",
    "greatest",
    "least",
    "empty",
    "null",
    "tool_param",
    # Lineage
    "Lineage",
    # Metrics
    "QueryMetrics",
    "LMMetrics",
    "RMMetrics",
    "OperatorMetrics",
    # Error
    "InvalidExampleCollectionError",
    # Logging
    "configure_logging",
    # QueryResult
    "DataLike",
    "DataLikeType",
    "QueryResult",
    # MCP
    "ToolParam",
    "BoundToolParam",
    "ParameterizedToolDefinition",
    "create_mcp_server",
    "run_mcp_server_asgi",
    "run_mcp_server_async",
    "run_mcp_server_sync",
]
