# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: logical_plan/v1/plans.proto
# Protobuf Python Version: 5.29.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    1,
    '',
    'logical_plan/v1/plans.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from fenic._gen.protos.logical_plan.v1 import datatypes_pb2 as logical__plan_dot_v1_dot_datatypes__pb2
from fenic._gen.protos.logical_plan.v1 import enums_pb2 as logical__plan_dot_v1_dot_enums__pb2
from fenic._gen.protos.logical_plan.v1 import expressions_pb2 as logical__plan_dot_v1_dot_expressions__pb2
from fenic._gen.protos.logical_plan.v1 import complex_types_pb2 as logical__plan_dot_v1_dot_complex__types__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1blogical_plan/v1/plans.proto\x12\x0flogical_plan.v1\x1a\x1flogical_plan/v1/datatypes.proto\x1a\x1blogical_plan/v1/enums.proto\x1a!logical_plan/v1/expressions.proto\x1a#logical_plan/v1/complex_types.proto\"P\n\x0b\x46\x65nicSchema\x12\x41\n\rcolumn_fields\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.ColumnFieldR\x0c\x63olumnFields\"Y\n\x0b\x43olumnField\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x36\n\tdata_type\x18\x02 \x01(\x0b\x32\x19.logical_plan.v1.DataTypeR\x08\x64\x61taType\";\n\tCacheInfo\x12 \n\tcache_key\x18\x01 \x01(\tH\x00R\x08\x63\x61\x63heKey\x88\x01\x01\x42\x0c\n\n_cache_key\"\xe4\n\n\x0bLogicalPlan\x12\x34\n\x06schema\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.FenicSchemaR\x06schema\x12>\n\ncache_info\x18\x02 \x01(\x0b\x32\x1a.logical_plan.v1.CacheInfoH\x01R\tcacheInfo\x88\x01\x01\x12K\n\x10in_memory_source\x18\n \x01(\x0b\x32\x1f.logical_plan.v1.InMemorySourceH\x00R\x0einMemorySource\x12>\n\x0b\x66ile_source\x18\x0b \x01(\x0b\x32\x1b.logical_plan.v1.FileSourceH\x00R\nfileSource\x12\x41\n\x0ctable_source\x18\x0c \x01(\x0b\x32\x1c.logical_plan.v1.TableSourceH\x00R\x0btableSource\x12;\n\ndoc_source\x18\r \x01(\x0b\x32\x1a.logical_plan.v1.DocSourceH\x00R\tdocSource\x12=\n\nprojection\x18\x14 \x01(\x0b\x32\x1b.logical_plan.v1.ProjectionH\x00R\nprojection\x12\x31\n\x06\x66ilter\x18\x15 \x01(\x0b\x32\x17.logical_plan.v1.FilterH\x00R\x06\x66ilter\x12+\n\x04join\x18\x16 \x01(\x0b\x32\x15.logical_plan.v1.JoinH\x00R\x04join\x12:\n\taggregate\x18\x17 \x01(\x0b\x32\x1a.logical_plan.v1.AggregateH\x00R\taggregate\x12.\n\x05union\x18\x18 \x01(\x0b\x32\x16.logical_plan.v1.UnionH\x00R\x05union\x12.\n\x05limit\x18\x19 \x01(\x0b\x32\x16.logical_plan.v1.LimitH\x00R\x05limit\x12\x34\n\x07\x65xplode\x18\x1a \x01(\x0b\x32\x18.logical_plan.v1.ExplodeH\x00R\x07\x65xplode\x12J\n\x0f\x64rop_duplicates\x18\x1b \x01(\x0b\x32\x1f.logical_plan.v1.DropDuplicatesH\x00R\x0e\x64ropDuplicates\x12+\n\x04sort\x18\x1c \x01(\x0b\x32\x15.logical_plan.v1.SortH\x00R\x04sort\x12\x31\n\x06unnest\x18\x1d \x01(\x0b\x32\x17.logical_plan.v1.UnnestH\x00R\x06unnest\x12(\n\x03sql\x18\x1e \x01(\x0b\x32\x14.logical_plan.v1.SQLH\x00R\x03sql\x12M\n\x10semantic_cluster\x18\x1f \x01(\x0b\x32 .logical_plan.v1.SemanticClusterH\x00R\x0fsemanticCluster\x12\x44\n\rsemantic_join\x18  \x01(\x0b\x32\x1d.logical_plan.v1.SemanticJoinH\x00R\x0csemanticJoin\x12\x63\n\x18semantic_similarity_join\x18! \x01(\x0b\x32\'.logical_plan.v1.SemanticSimilarityJoinH\x00R\x16semanticSimilarityJoin\x12\x38\n\tfile_sink\x18( \x01(\x0b\x32\x19.logical_plan.v1.FileSinkH\x00R\x08\x66ileSink\x12;\n\ntable_sink\x18) \x01(\x0b\x32\x1a.logical_plan.v1.TableSinkH\x00R\ttableSinkB\x0b\n\tplan_typeB\r\n\x0b_cache_info\"(\n\x0eInMemorySource\x12\x16\n\x06source\x18\x01 \x01(\x0cR\x06source\"\xf0\x01\n\nFileSource\x12\x14\n\x05paths\x18\x01 \x03(\tR\x05paths\x12\x1f\n\x0b\x66ile_format\x18\x02 \x01(\tR\nfileFormat\x12\x35\n\x14options_merge_schema\x18\x03 \x01(\x08H\x00R\x12optionsMergeSchema\x88\x01\x01\x12H\n\x0eoptions_schema\x18\x04 \x01(\x0b\x32\x1c.logical_plan.v1.FenicSchemaH\x01R\roptionsSchema\x88\x01\x01\x42\x17\n\x15_options_merge_schemaB\x11\n\x0f_options_schema\",\n\x0bTableSource\x12\x1d\n\ntable_name\x18\x01 \x01(\tR\ttableName\"\xaf\x01\n\tDocSource\x12\x14\n\x05paths\x18\x01 \x03(\tR\x05paths\x12\x30\n\x14valid_file_extension\x18\x02 \x01(\tR\x12validFileExtension\x12\x1d\n\x07\x65xclude\x18\x03 \x01(\tH\x00R\x07\x65xclude\x88\x01\x01\x12!\n\trecursive\x18\x04 \x01(\x08H\x01R\trecursive\x88\x01\x01\x42\n\n\x08_excludeB\x0c\n\n_recursive\"t\n\nProjection\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12\x32\n\x05\x65xprs\x18\x02 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\"x\n\x06\x46ilter\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12:\n\tpredicate\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\tpredicate\"\xf9\x01\n\x04Join\x12\x30\n\x04left\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x04left\x12\x32\n\x05right\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05right\x12\x1b\n\tjoin_type\x18\x03 \x01(\tR\x08joinType\x12\x35\n\x07left_on\x18\x04 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06leftOn\x12\x37\n\x08right_on\x18\x05 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x07rightOn\"\xf6\x03\n\x0cSemanticJoin\x12\x30\n\x04left\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x04left\x12\x32\n\x05right\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05right\x12\x35\n\x07left_on\x18\x03 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06leftOn\x12\x37\n\x08right_on\x18\x04 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x07rightOn\x12%\n\x0ejinja_template\x18\x05 \x01(\tR\rjinjaTemplate\x12\x16\n\x06strict\x18\x06 \x01(\x08R\x06strict\x12 \n\x0btemperature\x18\x07 \x01(\x02R\x0btemperature\x12I\n\x0bmodel_alias\x18\x08 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x12G\n\x08\x65xamples\x18\t \x01(\x0b\x32&.logical_plan.v1.JoinExampleCollectionH\x01R\x08\x65xamples\x88\x01\x01\x42\x0e\n\x0c_model_aliasB\x0b\n\t_examples\"\xfd\x03\n\x16SemanticSimilarityJoin\x12\x30\n\x04left\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x04left\x12\x32\n\x05right\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05right\x12\x35\n\x07left_on\x18\x03 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06leftOn\x12\x37\n\x08right_on\x18\x04 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x07rightOn\x12\x0c\n\x01k\x18\x06 \x01(\x05R\x01k\x12m\n\x11similarity_metric\x18\x07 \x01(\x0e\x32@.logical_plan.v1.SemanticSimilarityJoin.SemanticSimilarityMetricR\x10similarityMetric\x12;\n\x17similarity_score_column\x18\x08 \x01(\tH\x00R\x15similarityScoreColumn\x88\x01\x01\"7\n\x18SemanticSimilarityMetric\x12\n\n\x06\x43OSINE\x10\x00\x12\x06\n\x02L2\x10\x01\x12\x07\n\x03\x44OT\x10\x02\x42\x1a\n\x18_similarity_score_column\"\xb9\x01\n\tAggregate\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12=\n\x0bgroup_exprs\x18\x02 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\ngroupExprs\x12\x39\n\tagg_exprs\x18\x03 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x08\x61ggExprs\"=\n\x05Union\x12\x34\n\x06inputs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x06inputs\"I\n\x05Limit\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12\x0c\n\x01n\x18\x02 \x01(\x05R\x01n\"o\n\x07\x45xplode\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12\x30\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"z\n\x0e\x44ropDuplicates\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12\x34\n\x06subset\x18\x02 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06subset\"w\n\x04Sort\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12;\n\nsort_exprs\x18\x02 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\tsortExprs\"p\n\x06Unnest\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12\x32\n\x05\x65xprs\x18\x02 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\"\x8b\x01\n\x03SQL\x12\x34\n\x06inputs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x06inputs\x12%\n\x0etemplate_names\x18\x02 \x03(\tR\rtemplateNames\x12\'\n\x0ftemplated_query\x18\x03 \x01(\tR\x0etemplatedQuery\"\xba\x02\n\x0fSemanticCluster\x12\x32\n\x05input\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05input\x12\x35\n\x07\x62y_expr\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06\x62yExpr\x12!\n\x0cnum_clusters\x18\x03 \x01(\x05R\x0bnumClusters\x12\x19\n\x08max_iter\x18\x04 \x01(\x05R\x07maxIter\x12\x19\n\x08num_init\x18\x05 \x01(\x05R\x07numInit\x12!\n\x0clabel_column\x18\x06 \x01(\tR\x0blabelColumn\x12,\n\x0f\x63\x65ntroid_column\x18\x07 \x01(\tH\x00R\x0e\x63\x65ntroidColumn\x88\x01\x01\x42\x12\n\x10_centroid_column\"\x83\x01\n\x08\x46ileSink\x12\x32\n\x05\x63hild\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05\x63hild\x12\x1b\n\tsink_type\x18\x02 \x01(\tR\x08sinkType\x12\x12\n\x04path\x18\x03 \x01(\tR\x04path\x12\x12\n\x04mode\x18\x04 \x01(\tR\x04mode\"r\n\tTableSink\x12\x32\n\x05\x63hild\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalPlanR\x05\x63hild\x12\x1d\n\ntable_name\x18\x02 \x01(\tR\ttableName\x12\x12\n\x04mode\x18\x03 \x01(\tR\x04modeBz\n\x13\x63om.logical_plan.v1B\nPlansProtoP\x01\xa2\x02\x03LXX\xaa\x02\x0eLogicalPlan.V1\xca\x02\x0eLogicalPlan\\V1\xe2\x02\x1aLogicalPlan\\V1\\GPBMetadata\xea\x02\x0fLogicalPlan::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'logical_plan.v1.plans_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\023com.logical_plan.v1B\nPlansProtoP\001\242\002\003LXX\252\002\016LogicalPlan.V1\312\002\016LogicalPlan\\V1\342\002\032LogicalPlan\\V1\\GPBMetadata\352\002\017LogicalPlan::V1'
  _globals['_FENICSCHEMA']._serialized_start=182
  _globals['_FENICSCHEMA']._serialized_end=262
  _globals['_COLUMNFIELD']._serialized_start=264
  _globals['_COLUMNFIELD']._serialized_end=353
  _globals['_CACHEINFO']._serialized_start=355
  _globals['_CACHEINFO']._serialized_end=414
  _globals['_LOGICALPLAN']._serialized_start=417
  _globals['_LOGICALPLAN']._serialized_end=1797
  _globals['_INMEMORYSOURCE']._serialized_start=1799
  _globals['_INMEMORYSOURCE']._serialized_end=1839
  _globals['_FILESOURCE']._serialized_start=1842
  _globals['_FILESOURCE']._serialized_end=2082
  _globals['_TABLESOURCE']._serialized_start=2084
  _globals['_TABLESOURCE']._serialized_end=2128
  _globals['_DOCSOURCE']._serialized_start=2131
  _globals['_DOCSOURCE']._serialized_end=2306
  _globals['_PROJECTION']._serialized_start=2308
  _globals['_PROJECTION']._serialized_end=2424
  _globals['_FILTER']._serialized_start=2426
  _globals['_FILTER']._serialized_end=2546
  _globals['_JOIN']._serialized_start=2549
  _globals['_JOIN']._serialized_end=2798
  _globals['_SEMANTICJOIN']._serialized_start=2801
  _globals['_SEMANTICJOIN']._serialized_end=3303
  _globals['_SEMANTICSIMILARITYJOIN']._serialized_start=3306
  _globals['_SEMANTICSIMILARITYJOIN']._serialized_end=3815
  _globals['_SEMANTICSIMILARITYJOIN_SEMANTICSIMILARITYMETRIC']._serialized_start=3732
  _globals['_SEMANTICSIMILARITYJOIN_SEMANTICSIMILARITYMETRIC']._serialized_end=3787
  _globals['_AGGREGATE']._serialized_start=3818
  _globals['_AGGREGATE']._serialized_end=4003
  _globals['_UNION']._serialized_start=4005
  _globals['_UNION']._serialized_end=4066
  _globals['_LIMIT']._serialized_start=4068
  _globals['_LIMIT']._serialized_end=4141
  _globals['_EXPLODE']._serialized_start=4143
  _globals['_EXPLODE']._serialized_end=4254
  _globals['_DROPDUPLICATES']._serialized_start=4256
  _globals['_DROPDUPLICATES']._serialized_end=4378
  _globals['_SORT']._serialized_start=4380
  _globals['_SORT']._serialized_end=4499
  _globals['_UNNEST']._serialized_start=4501
  _globals['_UNNEST']._serialized_end=4613
  _globals['_SQL']._serialized_start=4616
  _globals['_SQL']._serialized_end=4755
  _globals['_SEMANTICCLUSTER']._serialized_start=4758
  _globals['_SEMANTICCLUSTER']._serialized_end=5072
  _globals['_FILESINK']._serialized_start=5075
  _globals['_FILESINK']._serialized_end=5206
  _globals['_TABLESINK']._serialized_start=5208
  _globals['_TABLESINK']._serialized_end=5322
# @@protoc_insertion_point(module_scope)
